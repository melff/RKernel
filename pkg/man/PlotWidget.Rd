% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/widget-plot.R
\name{PlotWidget}
\alias{PlotWidget}
\alias{SVGWidgetClass}
\alias{SVGWidget}
\alias{with.SVGWidget}
\title{Widgets to receive plots graphics}
\usage{
SVGWidget(...)

\method{with}{SVGWidget}(data, expr, envir = list(), enclos = parent.frame(), ...)

PlotWidget(...)
}
\arguments{
\item{...}{Arguments, passed to the ImageWidget constructors.}

\item{data}{An "SVGWidget" object}

\item{expr}{An expression to evaluate, or a sequence of expression, 
encapsulated by curly braces.}

\item{envir}{An environment or a list within which `expr` is evaluated.}

\item{enclos}{An enclosing environment.}
}
\description{
Class and constructors show graphics created by code
}
\section{Super classes}{
\code{\link[RKernel:HasTraits]{RKernel::HasTraits}} -> \code{\link[RKernel:Widget]{RKernel::Widget}} -> \code{\link[RKernel:DOMWidget]{RKernel::DOMWidget}} -> \code{\link[RKernel:DescriptionWidget]{RKernel::DescriptionWidget}} -> \code{RKernel::ValueWidget} -> \code{\link[RKernel:StringWidget]{RKernel::StringWidget}} -> \code{\link[RKernel:HTML]{RKernel::HTML}} -> \code{SVGWidget}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{context}}{A Context instance or NULL}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SVGWidget-new}{\code{SVGWidgetClass$new()}}
\item \href{#method-SVGWidget-activate}{\code{SVGWidgetClass$activate()}}
\item \href{#method-SVGWidget-suspend}{\code{SVGWidgetClass$suspend()}}
\item \href{#method-SVGWidget-render}{\code{SVGWidgetClass$render()}}
\item \href{#method-SVGWidget-clone}{\code{SVGWidgetClass$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="notify"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-notify'><code>RKernel::HasTraits$notify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="observe"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-observe'><code>RKernel::HasTraits$observe()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="validate"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-validate'><code>RKernel::HasTraits$validate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="_send"><a href='../../RKernel/html/Widget.html#method-Widget-_send'><code>RKernel::Widget$_send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="check_version"><a href='../../RKernel/html/Widget.html#method-Widget-check_version'><code>RKernel::Widget$check_version()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="close"><a href='../../RKernel/html/Widget.html#method-Widget-close'><code>RKernel::Widget$close()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="display_data"><a href='../../RKernel/html/Widget.html#method-Widget-display_data'><code>RKernel::Widget$display_data()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="finalize"><a href='../../RKernel/html/Widget.html#method-Widget-finalize'><code>RKernel::Widget$finalize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="get_state"><a href='../../RKernel/html/Widget.html#method-Widget-get_state'><code>RKernel::Widget$get_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_buffers"><a href='../../RKernel/html/Widget.html#method-Widget-handle_buffers'><code>RKernel::Widget$handle_buffers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_msg'><code>RKernel::Widget$handle_comm_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_opened"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_opened'><code>RKernel::Widget$handle_comm_opened()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_custom_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_custom_msg'><code>RKernel::Widget$handle_custom_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-handle_displayed'><code>RKernel::Widget$handle_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_event"><a href='../../RKernel/html/Widget.html#method-Widget-handle_event'><code>RKernel::Widget$handle_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-on_displayed'><code>RKernel::Widget$on_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_event"><a href='../../RKernel/html/Widget.html#method-Widget-on_event'><code>RKernel::Widget$on_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_msg"><a href='../../RKernel/html/Widget.html#method-Widget-on_msg'><code>RKernel::Widget$on_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="open"><a href='../../RKernel/html/Widget.html#method-Widget-open'><code>RKernel::Widget$open()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send"><a href='../../RKernel/html/Widget.html#method-Widget-send'><code>RKernel::Widget$send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send_state"><a href='../../RKernel/html/Widget.html#method-Widget-send_state'><code>RKernel::Widget$send_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="set_state"><a href='../../RKernel/html/Widget.html#method-Widget-set_state'><code>RKernel::Widget$set_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="add_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-add_class'><code>RKernel::DOMWidget$add_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="has_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-has_class'><code>RKernel::DOMWidget$has_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="remove_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-remove_class'><code>RKernel::DOMWidget$remove_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="ValueWidget" data-id="on_change"><a href='../../RKernel/html/ValueWidget.html#method-ValueWidget-on_change'><code>RKernel::ValueWidget$on_change()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SVGWidget-new"></a>}}
\if{latex}{\out{\hypertarget{method-SVGWidget-new}{}}}
\subsection{Method \code{new()}}{
Initialize the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SVGWidgetClass$new(..., width = NULL, height = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Arguments passed to the superclass initializer}

\item{\code{width}}{A character string, giving the width as a CSS property}

\item{\code{height}}{A character string, giving the height as a CSS property}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SVGWidget-activate"></a>}}
\if{latex}{\out{\hypertarget{method-SVGWidget-activate}{}}}
\subsection{Method \code{activate()}}{
Activate widget as graphics device
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SVGWidgetClass$activate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SVGWidget-suspend"></a>}}
\if{latex}{\out{\hypertarget{method-SVGWidget-suspend}{}}}
\subsection{Method \code{suspend()}}{
Suspend widget as graphics device
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SVGWidgetClass$suspend()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SVGWidget-render"></a>}}
\if{latex}{\out{\hypertarget{method-SVGWidget-render}{}}}
\subsection{Method \code{render()}}{
Render contents of graphics device as SVG
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SVGWidgetClass$render()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SVGWidget-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SVGWidget-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SVGWidgetClass$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
