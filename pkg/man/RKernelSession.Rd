% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/session.R
\name{RKernelSession}
\alias{RKernelSession}
\title{The KernelSession Class}
\description{
An object of this class handles the communication with
  an R process. There is usually one main session, but there may
  also sessions for detached code cells.
}
\section{Super classes}{
\code{\link[processx:process]{processx::process}} -> \code{\link[callr:r_session]{callr::r_session}} -> \code{\link[RKernel:RSessionBase]{RKernel::RSessionBase}} -> \code{RKernelSession}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{http_port}}{The port number of HTML help.}

\item{\code{yield}}{An optional function to service kernel requests}

\item{\code{kernel}}{The reference to the controlling kernel object}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-RKernelSession-connect}{\code{RKernelSession$connect()}}
\item \href{#method-RKernelSession-setup}{\code{RKernelSession$setup()}}
\item \href{#method-RKernelSession-start_graphics}{\code{RKernelSession$start_graphics()}}
\item \href{#method-RKernelSession-dev_new}{\code{RKernelSession$dev_new()}}
\item \href{#method-RKernelSession-graphics_details}{\code{RKernelSession$graphics_details()}}
\item \href{#method-RKernelSession-clone}{\code{RKernelSession$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="as_ps_handle"><a href='../../processx/html/process.html#method-process-as_ps_handle'><code>processx::process$as_ps_handle()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="format"><a href='../../processx/html/process.html#method-process-format'><code>processx::process$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_cmdline"><a href='../../processx/html/process.html#method-process-get_cmdline'><code>processx::process$get_cmdline()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_cpu_times"><a href='../../processx/html/process.html#method-process-get_cpu_times'><code>processx::process$get_cpu_times()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_error_connection"><a href='../../processx/html/process.html#method-process-get_error_connection'><code>processx::process$get_error_connection()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_error_file"><a href='../../processx/html/process.html#method-process-get_error_file'><code>processx::process$get_error_file()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_exe"><a href='../../processx/html/process.html#method-process-get_exe'><code>processx::process$get_exe()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_exit_status"><a href='../../processx/html/process.html#method-process-get_exit_status'><code>processx::process$get_exit_status()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_input_connection"><a href='../../processx/html/process.html#method-process-get_input_connection'><code>processx::process$get_input_connection()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_input_file"><a href='../../processx/html/process.html#method-process-get_input_file'><code>processx::process$get_input_file()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_memory_info"><a href='../../processx/html/process.html#method-process-get_memory_info'><code>processx::process$get_memory_info()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_name"><a href='../../processx/html/process.html#method-process-get_name'><code>processx::process$get_name()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_output_connection"><a href='../../processx/html/process.html#method-process-get_output_connection'><code>processx::process$get_output_connection()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_output_file"><a href='../../processx/html/process.html#method-process-get_output_file'><code>processx::process$get_output_file()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_pid"><a href='../../processx/html/process.html#method-process-get_pid'><code>processx::process$get_pid()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_poll_connection"><a href='../../processx/html/process.html#method-process-get_poll_connection'><code>processx::process$get_poll_connection()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_result"><a href='../../processx/html/process.html#method-process-get_result'><code>processx::process$get_result()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_start_time"><a href='../../processx/html/process.html#method-process-get_start_time'><code>processx::process$get_start_time()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_status"><a href='../../processx/html/process.html#method-process-get_status'><code>processx::process$get_status()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_username"><a href='../../processx/html/process.html#method-process-get_username'><code>processx::process$get_username()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="get_wd"><a href='../../processx/html/process.html#method-process-get_wd'><code>processx::process$get_wd()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="has_error_connection"><a href='../../processx/html/process.html#method-process-has_error_connection'><code>processx::process$has_error_connection()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="has_input_connection"><a href='../../processx/html/process.html#method-process-has_input_connection'><code>processx::process$has_input_connection()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="has_output_connection"><a href='../../processx/html/process.html#method-process-has_output_connection'><code>processx::process$has_output_connection()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="has_poll_connection"><a href='../../processx/html/process.html#method-process-has_poll_connection'><code>processx::process$has_poll_connection()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="interrupt"><a href='../../processx/html/process.html#method-process-interrupt'><code>processx::process$interrupt()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="is_alive"><a href='../../processx/html/process.html#method-process-is_alive'><code>processx::process$is_alive()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="is_incomplete_error"><a href='../../processx/html/process.html#method-process-is_incomplete_error'><code>processx::process$is_incomplete_error()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="is_incomplete_output"><a href='../../processx/html/process.html#method-process-is_incomplete_output'><code>processx::process$is_incomplete_output()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="is_supervised"><a href='../../processx/html/process.html#method-process-is_supervised'><code>processx::process$is_supervised()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="kill"><a href='../../processx/html/process.html#method-process-kill'><code>processx::process$kill()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="kill_tree"><a href='../../processx/html/process.html#method-process-kill_tree'><code>processx::process$kill_tree()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="poll_io"><a href='../../processx/html/process.html#method-process-poll_io'><code>processx::process$poll_io()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="read_all_error"><a href='../../processx/html/process.html#method-process-read_all_error'><code>processx::process$read_all_error()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="read_all_error_lines"><a href='../../processx/html/process.html#method-process-read_all_error_lines'><code>processx::process$read_all_error_lines()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="read_all_output"><a href='../../processx/html/process.html#method-process-read_all_output'><code>processx::process$read_all_output()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="read_all_output_lines"><a href='../../processx/html/process.html#method-process-read_all_output_lines'><code>processx::process$read_all_output_lines()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="read_error"><a href='../../processx/html/process.html#method-process-read_error'><code>processx::process$read_error()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="read_error_lines"><a href='../../processx/html/process.html#method-process-read_error_lines'><code>processx::process$read_error_lines()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="read_output_lines"><a href='../../processx/html/process.html#method-process-read_output_lines'><code>processx::process$read_output_lines()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="resume"><a href='../../processx/html/process.html#method-process-resume'><code>processx::process$resume()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="signal"><a href='../../processx/html/process.html#method-process-signal'><code>processx::process$signal()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="supervise"><a href='../../processx/html/process.html#method-process-supervise'><code>processx::process$supervise()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="suspend"><a href='../../processx/html/process.html#method-process-suspend'><code>processx::process$suspend()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="wait"><a href='../../processx/html/process.html#method-process-wait'><code>processx::process$wait()</code></a></span></li>
<li><span class="pkg-link" data-pkg="processx" data-topic="process" data-id="write_input"><a href='../../processx/html/process.html#method-process-write_input'><code>processx::process$write_input()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="attach"><a href='../../callr/html/r_session.html#method-r_session-attach'><code>callr::r_session$attach()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="call"><a href='../../callr/html/r_session.html#method-r_session-call'><code>callr::r_session$call()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="close"><a href='../../callr/html/r_session.html#method-r_session-close'><code>callr::r_session$close()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="debug"><a href='../../callr/html/r_session.html#method-r_session-debug'><code>callr::r_session$debug()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="finalize"><a href='../../callr/html/r_session.html#method-r_session-finalize'><code>callr::r_session$finalize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="get_running_time"><a href='../../callr/html/r_session.html#method-r_session-get_running_time'><code>callr::r_session$get_running_time()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="get_state"><a href='../../callr/html/r_session.html#method-r_session-get_state'><code>callr::r_session$get_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="poll_process"><a href='../../callr/html/r_session.html#method-r_session-poll_process'><code>callr::r_session$poll_process()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="print"><a href='../../callr/html/r_session.html#method-r_session-print'><code>callr::r_session$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="read"><a href='../../callr/html/r_session.html#method-r_session-read'><code>callr::r_session$read()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="run"><a href='../../callr/html/r_session.html#method-r_session-run'><code>callr::r_session$run()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="run_with_output"><a href='../../callr/html/r_session.html#method-r_session-run_with_output'><code>callr::r_session$run_with_output()</code></a></span></li>
<li><span class="pkg-link" data-pkg="callr" data-topic="r_session" data-id="traceback"><a href='../../callr/html/r_session.html#method-r_session-traceback'><code>callr::r_session$traceback()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="RSessionBase" data-id="initialize"><a href='../../RKernel/html/RSessionBase.html#method-RSessionBase-initialize'><code>RKernel::RSessionBase$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="RSessionBase" data-id="read_output"><a href='../../RKernel/html/RSessionBase.html#method-RSessionBase-read_output'><code>RKernel::RSessionBase$read_output()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="RSessionBase" data-id="receive_all_output"><a href='../../RKernel/html/RSessionBase.html#method-RSessionBase-receive_all_output'><code>RKernel::RSessionBase$receive_all_output()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="RSessionBase" data-id="receive_output"><a href='../../RKernel/html/RSessionBase.html#method-RSessionBase-receive_output'><code>RKernel::RSessionBase$receive_output()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="RSessionBase" data-id="send_input"><a href='../../RKernel/html/RSessionBase.html#method-RSessionBase-send_input'><code>RKernel::RSessionBase$send_input()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="RSessionBase" data-id="send_receive"><a href='../../RKernel/html/RSessionBase.html#method-RSessionBase-send_receive'><code>RKernel::RSessionBase$send_receive()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="RSessionBase" data-id="sleeping"><a href='../../RKernel/html/RSessionBase.html#method-RSessionBase-sleeping'><code>RKernel::RSessionBase$sleeping()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RKernelSession-connect"></a>}}
\if{latex}{\out{\hypertarget{method-RKernelSession-connect}{}}}
\subsection{Method \code{connect()}}{
Connect the session with the main Kernel object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RKernelSession$connect(yield, kernel)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{yield}}{The function that is called when the session objects
yields back control to the kernel object, for example in order
to wait for comm message when a widget is active.}

\item{\code{kernel}}{The main kernel objectd}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RKernelSession-setup"></a>}}
\if{latex}{\out{\hypertarget{method-RKernelSession-setup}{}}}
\subsection{Method \code{setup()}}{
Set up the R session, by installing hooks etc.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RKernelSession$setup()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RKernelSession-start_graphics"></a>}}
\if{latex}{\out{\hypertarget{method-RKernelSession-start_graphics}{}}}
\subsection{Method \code{start_graphics()}}{
Initialize graphics, start device and
   return details
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RKernelSession$start_graphics()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RKernelSession-dev_new"></a>}}
\if{latex}{\out{\hypertarget{method-RKernelSession-dev_new}{}}}
\subsection{Method \code{dev_new()}}{
Start a httpgd device and return the
   graphics details.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RKernelSession$dev_new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RKernelSession-graphics_details"></a>}}
\if{latex}{\out{\hypertarget{method-RKernelSession-graphics_details}{}}}
\subsection{Method \code{graphics_details()}}{
Return the
   graphics details.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RKernelSession$graphics_details()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RKernelSession-clone"></a>}}
\if{latex}{\out{\hypertarget{method-RKernelSession-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RKernelSession$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
