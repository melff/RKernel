% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/widget-interaction.R
\name{interaction}
\alias{interaction}
\alias{interactive_output}
\alias{mkWidgets}
\alias{Interactive}
\alias{interact}
\title{Interactions Using Widgets}
\usage{
interactive_output(
  FUN,
  controls,
  out,
  button = NULL,
  continuous_update = TRUE,
  autorun = TRUE,
  clear = FALSE,
  mime_type = "text/plain"
)

mkWidgets(...)

Interactive(
  FUN,
  ...,
  continuous_update = TRUE,
  append_output = FALSE,
  use_display = TRUE
)

interact(
  FUN,
  ...,
  continuous_update = TRUE,
  append_output = FALSE,
  use_display = TRUE
)
}
\arguments{
\item{FUN}{A function to called with arguments manipulated using interactive
widgets.}

\item{controls}{A list of controlling widgets, usually created with the
function \code{mkwidgets}}

\item{out}{An output widget, i.e. a widget in class "OutputWidget"}

\item{button}{An (optional) button widget; when clicked, the function
\code{FUN} is called.}

\item{continuous_update}{A logical value, if \code{TRUE} the function
\code{FUN} is called whenever one of the controlling widgets changes a
value}

\item{autorun}{Logical, whether the function \code{FUN} will be automatically
called when any of the controlling widget values is changed or
only when \code{button} is clicked.}

\item{clear}{Logical, whether \code{out} is cleared before each
call of \code{FUN}.}

\item{mime_type}{A character string that specifies the mime type as which the
return value of \code{FUN} is displayed.}

\item{...}{Named arguments, transformed into widgets using the generic
function \code{\link{mkWidget}}.}

\item{append_output}{Logical, whether existing output should be appended to or overwritten.}

\item{use_display}{Logical, whether the display mechanism is used internally for 
output streams.}
}
\description{
A variety of functions to create interactive function calls
}
