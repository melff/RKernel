% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/widget-selection.R
\name{SelectionWidget}
\alias{SelectionWidget}
\alias{SelectionWidgetClass}
\alias{DropdownClass}
\alias{Dropdown}
\alias{RadioButtonsClass}
\alias{RadioButtons}
\alias{ListboxSelectClass}
\alias{ListBox}
\alias{ToggleButtonsStyleClass}
\alias{ToggleButtonsClass}
\alias{ToggleButtons}
\alias{SelectionSliderClass}
\alias{SelectionSlider}
\alias{MultipleSelectionWidgetClass}
\alias{MultipleSelectionWidget}
\alias{ListboxSelectMultipleClass}
\alias{ListBoxMultiple}
\alias{SelectionRangeSliderClass}
\alias{SelectionRangeSlider}
\title{Selection widgets}
\usage{
SelectionWidget(options, value, ...)

Dropdown(options, value, ...)

RadioButtons(options, value, ...)

ListBox(options, value, ...)

ToggleButtons(options, value, ...)

SelectionSlider(options, value, ...)

MultipleSelectionWidget(options, value, ...)

ListBoxMultiple(options, value, ...)

SelectionRangeSlider(options, value, ...)
}
\arguments{
\item{options}{A named vector or a vector coerceable into a character vector.}

\item{value}{A trait.}

\item{...}{Any other arguments, ignored.}
}
\description{
Classes and constructors for selection widgets, i.e. dropdowns, listboxes etc.
}
\section{Functions}{
\itemize{
\item \code{SelectionWidget()}: A constructor function for selection widgets.

\item \code{Dropdown()}: The construction function for dropdown widgets.

\item \code{RadioButtons()}: The construction function for radiobuttons widgets.

\item \code{ListBox()}: The construction function for listbox-selection widgets.

\item \code{ToggleButtons()}: The construction function for togglebuttons widgets.

\item \code{SelectionSlider()}: The construction function for listbox widgets with multiple selections.

\item \code{MultipleSelectionWidget()}: The construction function for multiple-selection widgets.

\item \code{ListBoxMultiple()}: The construction function for listbox widgets with multiple selections.

\item \code{SelectionRangeSlider()}: The construction function for listbox widgets with multiple selections.

}}
\section{Super classes}{
\code{\link[RKernel:HasTraits]{RKernel::HasTraits}} -> \code{\link[RKernel:Widget]{RKernel::Widget}} -> \code{\link[RKernel:DOMWidget]{RKernel::DOMWidget}} -> \code{\link[RKernel:DescriptionWidget]{RKernel::DescriptionWidget}} -> \code{SelectionWidget}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{_options_labels}}{A unicode vector of option labels.}

\item{\code{index}}{An integer that refers to currently selected item.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{value}}{The selected option}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SelectionWidget-validate_index}{\code{SelectionWidgetClass$validate_index()}}
\item \href{#method-SelectionWidget-new}{\code{SelectionWidgetClass$new()}}
\item \href{#method-SelectionWidget-clone}{\code{SelectionWidgetClass$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="notify"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-notify'><code>RKernel::HasTraits$notify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="observe"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-observe'><code>RKernel::HasTraits$observe()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="validate"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-validate'><code>RKernel::HasTraits$validate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="_send"><a href='../../RKernel/html/Widget.html#method-Widget-_send'><code>RKernel::Widget$_send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="check_version"><a href='../../RKernel/html/Widget.html#method-Widget-check_version'><code>RKernel::Widget$check_version()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="close"><a href='../../RKernel/html/Widget.html#method-Widget-close'><code>RKernel::Widget$close()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="display_data"><a href='../../RKernel/html/Widget.html#method-Widget-display_data'><code>RKernel::Widget$display_data()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="finalize"><a href='../../RKernel/html/Widget.html#method-Widget-finalize'><code>RKernel::Widget$finalize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="get_state"><a href='../../RKernel/html/Widget.html#method-Widget-get_state'><code>RKernel::Widget$get_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_buffers"><a href='../../RKernel/html/Widget.html#method-Widget-handle_buffers'><code>RKernel::Widget$handle_buffers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_msg'><code>RKernel::Widget$handle_comm_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_opened"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_opened'><code>RKernel::Widget$handle_comm_opened()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_custom_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_custom_msg'><code>RKernel::Widget$handle_custom_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-handle_displayed'><code>RKernel::Widget$handle_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_event"><a href='../../RKernel/html/Widget.html#method-Widget-handle_event'><code>RKernel::Widget$handle_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-on_displayed'><code>RKernel::Widget$on_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_event"><a href='../../RKernel/html/Widget.html#method-Widget-on_event'><code>RKernel::Widget$on_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_msg"><a href='../../RKernel/html/Widget.html#method-Widget-on_msg'><code>RKernel::Widget$on_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="open"><a href='../../RKernel/html/Widget.html#method-Widget-open'><code>RKernel::Widget$open()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send"><a href='../../RKernel/html/Widget.html#method-Widget-send'><code>RKernel::Widget$send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send_state"><a href='../../RKernel/html/Widget.html#method-Widget-send_state'><code>RKernel::Widget$send_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="set_state"><a href='../../RKernel/html/Widget.html#method-Widget-set_state'><code>RKernel::Widget$set_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="add_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-add_class'><code>RKernel::DOMWidget$add_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="has_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-has_class'><code>RKernel::DOMWidget$has_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="remove_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-remove_class'><code>RKernel::DOMWidget$remove_class()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SelectionWidget-validate_index"></a>}}
\if{latex}{\out{\hypertarget{method-SelectionWidget-validate_index}{}}}
\subsection{Method \code{validate_index()}}{
Validate an index argument.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SelectionWidgetClass$validate_index(index)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{index}}{The index to be checked.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SelectionWidget-new"></a>}}
\if{latex}{\out{\hypertarget{method-SelectionWidget-new}{}}}
\subsection{Method \code{new()}}{
Initialiser
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SelectionWidgetClass$new(options, value, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{options}}{A named vector or a vector coerceable into a character vector.}

\item{\code{value}}{Name of a selectable option.}

\item{\code{...}}{Any other arguments, ignored.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SelectionWidget-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SelectionWidget-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SelectionWidgetClass$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super classes}{
\code{\link[RKernel:HasTraits]{RKernel::HasTraits}} -> \code{\link[RKernel:Widget]{RKernel::Widget}} -> \code{\link[RKernel:DOMWidget]{RKernel::DOMWidget}} -> \code{\link[RKernel:DescriptionWidget]{RKernel::DescriptionWidget}} -> \code{\link[RKernel:SelectionWidget]{RKernel::SelectionWidget}} -> \code{Dropdown}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{_model_name}}{Name of the Javascript model in the frontend.}

\item{\code{_view_name}}{Name of the Javascript view in the frontend.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Dropdown-clone}{\code{DropdownClass$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="notify"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-notify'><code>RKernel::HasTraits$notify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="observe"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-observe'><code>RKernel::HasTraits$observe()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="validate"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-validate'><code>RKernel::HasTraits$validate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="_send"><a href='../../RKernel/html/Widget.html#method-Widget-_send'><code>RKernel::Widget$_send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="check_version"><a href='../../RKernel/html/Widget.html#method-Widget-check_version'><code>RKernel::Widget$check_version()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="close"><a href='../../RKernel/html/Widget.html#method-Widget-close'><code>RKernel::Widget$close()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="display_data"><a href='../../RKernel/html/Widget.html#method-Widget-display_data'><code>RKernel::Widget$display_data()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="finalize"><a href='../../RKernel/html/Widget.html#method-Widget-finalize'><code>RKernel::Widget$finalize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="get_state"><a href='../../RKernel/html/Widget.html#method-Widget-get_state'><code>RKernel::Widget$get_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_buffers"><a href='../../RKernel/html/Widget.html#method-Widget-handle_buffers'><code>RKernel::Widget$handle_buffers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_msg'><code>RKernel::Widget$handle_comm_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_opened"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_opened'><code>RKernel::Widget$handle_comm_opened()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_custom_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_custom_msg'><code>RKernel::Widget$handle_custom_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-handle_displayed'><code>RKernel::Widget$handle_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_event"><a href='../../RKernel/html/Widget.html#method-Widget-handle_event'><code>RKernel::Widget$handle_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-on_displayed'><code>RKernel::Widget$on_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_event"><a href='../../RKernel/html/Widget.html#method-Widget-on_event'><code>RKernel::Widget$on_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_msg"><a href='../../RKernel/html/Widget.html#method-Widget-on_msg'><code>RKernel::Widget$on_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="open"><a href='../../RKernel/html/Widget.html#method-Widget-open'><code>RKernel::Widget$open()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send"><a href='../../RKernel/html/Widget.html#method-Widget-send'><code>RKernel::Widget$send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send_state"><a href='../../RKernel/html/Widget.html#method-Widget-send_state'><code>RKernel::Widget$send_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="set_state"><a href='../../RKernel/html/Widget.html#method-Widget-set_state'><code>RKernel::Widget$set_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="add_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-add_class'><code>RKernel::DOMWidget$add_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="has_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-has_class'><code>RKernel::DOMWidget$has_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="remove_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-remove_class'><code>RKernel::DOMWidget$remove_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="SelectionWidget" data-id="initialize"><a href='../../RKernel/html/SelectionWidget.html#method-SelectionWidget-initialize'><code>RKernel::SelectionWidget$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="SelectionWidget" data-id="validate_index"><a href='../../RKernel/html/SelectionWidget.html#method-SelectionWidget-validate_index'><code>RKernel::SelectionWidget$validate_index()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Dropdown-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Dropdown-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DropdownClass$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super classes}{
\code{\link[RKernel:HasTraits]{RKernel::HasTraits}} -> \code{\link[RKernel:Widget]{RKernel::Widget}} -> \code{\link[RKernel:DOMWidget]{RKernel::DOMWidget}} -> \code{\link[RKernel:DescriptionWidget]{RKernel::DescriptionWidget}} -> \code{\link[RKernel:SelectionWidget]{RKernel::SelectionWidget}} -> \code{RadioButtons}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{_model_name}}{Name of the Javascript model in the frontend.}

\item{\code{_view_name}}{Name of the Javascript view in the frontend.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-RadioButtons-clone}{\code{RadioButtonsClass$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="notify"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-notify'><code>RKernel::HasTraits$notify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="observe"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-observe'><code>RKernel::HasTraits$observe()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="validate"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-validate'><code>RKernel::HasTraits$validate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="_send"><a href='../../RKernel/html/Widget.html#method-Widget-_send'><code>RKernel::Widget$_send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="check_version"><a href='../../RKernel/html/Widget.html#method-Widget-check_version'><code>RKernel::Widget$check_version()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="close"><a href='../../RKernel/html/Widget.html#method-Widget-close'><code>RKernel::Widget$close()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="display_data"><a href='../../RKernel/html/Widget.html#method-Widget-display_data'><code>RKernel::Widget$display_data()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="finalize"><a href='../../RKernel/html/Widget.html#method-Widget-finalize'><code>RKernel::Widget$finalize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="get_state"><a href='../../RKernel/html/Widget.html#method-Widget-get_state'><code>RKernel::Widget$get_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_buffers"><a href='../../RKernel/html/Widget.html#method-Widget-handle_buffers'><code>RKernel::Widget$handle_buffers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_msg'><code>RKernel::Widget$handle_comm_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_opened"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_opened'><code>RKernel::Widget$handle_comm_opened()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_custom_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_custom_msg'><code>RKernel::Widget$handle_custom_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-handle_displayed'><code>RKernel::Widget$handle_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_event"><a href='../../RKernel/html/Widget.html#method-Widget-handle_event'><code>RKernel::Widget$handle_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-on_displayed'><code>RKernel::Widget$on_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_event"><a href='../../RKernel/html/Widget.html#method-Widget-on_event'><code>RKernel::Widget$on_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_msg"><a href='../../RKernel/html/Widget.html#method-Widget-on_msg'><code>RKernel::Widget$on_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="open"><a href='../../RKernel/html/Widget.html#method-Widget-open'><code>RKernel::Widget$open()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send"><a href='../../RKernel/html/Widget.html#method-Widget-send'><code>RKernel::Widget$send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send_state"><a href='../../RKernel/html/Widget.html#method-Widget-send_state'><code>RKernel::Widget$send_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="set_state"><a href='../../RKernel/html/Widget.html#method-Widget-set_state'><code>RKernel::Widget$set_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="add_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-add_class'><code>RKernel::DOMWidget$add_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="has_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-has_class'><code>RKernel::DOMWidget$has_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="remove_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-remove_class'><code>RKernel::DOMWidget$remove_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="SelectionWidget" data-id="initialize"><a href='../../RKernel/html/SelectionWidget.html#method-SelectionWidget-initialize'><code>RKernel::SelectionWidget$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="SelectionWidget" data-id="validate_index"><a href='../../RKernel/html/SelectionWidget.html#method-SelectionWidget-validate_index'><code>RKernel::SelectionWidget$validate_index()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RadioButtons-clone"></a>}}
\if{latex}{\out{\hypertarget{method-RadioButtons-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RadioButtonsClass$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super classes}{
\code{\link[RKernel:HasTraits]{RKernel::HasTraits}} -> \code{\link[RKernel:Widget]{RKernel::Widget}} -> \code{\link[RKernel:DOMWidget]{RKernel::DOMWidget}} -> \code{\link[RKernel:DescriptionWidget]{RKernel::DescriptionWidget}} -> \code{\link[RKernel:SelectionWidget]{RKernel::SelectionWidget}} -> \code{ListboxSelect}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{_model_name}}{Name of the Javascript model in the frontend.}

\item{\code{_view_name}}{Name of the Javascript view in the frontend.}

\item{\code{rows}}{An integer, the number of rows.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ListboxSelect-clone}{\code{ListboxSelectClass$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="notify"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-notify'><code>RKernel::HasTraits$notify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="observe"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-observe'><code>RKernel::HasTraits$observe()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="validate"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-validate'><code>RKernel::HasTraits$validate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="_send"><a href='../../RKernel/html/Widget.html#method-Widget-_send'><code>RKernel::Widget$_send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="check_version"><a href='../../RKernel/html/Widget.html#method-Widget-check_version'><code>RKernel::Widget$check_version()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="close"><a href='../../RKernel/html/Widget.html#method-Widget-close'><code>RKernel::Widget$close()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="display_data"><a href='../../RKernel/html/Widget.html#method-Widget-display_data'><code>RKernel::Widget$display_data()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="finalize"><a href='../../RKernel/html/Widget.html#method-Widget-finalize'><code>RKernel::Widget$finalize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="get_state"><a href='../../RKernel/html/Widget.html#method-Widget-get_state'><code>RKernel::Widget$get_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_buffers"><a href='../../RKernel/html/Widget.html#method-Widget-handle_buffers'><code>RKernel::Widget$handle_buffers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_msg'><code>RKernel::Widget$handle_comm_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_opened"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_opened'><code>RKernel::Widget$handle_comm_opened()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_custom_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_custom_msg'><code>RKernel::Widget$handle_custom_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-handle_displayed'><code>RKernel::Widget$handle_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_event"><a href='../../RKernel/html/Widget.html#method-Widget-handle_event'><code>RKernel::Widget$handle_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-on_displayed'><code>RKernel::Widget$on_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_event"><a href='../../RKernel/html/Widget.html#method-Widget-on_event'><code>RKernel::Widget$on_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_msg"><a href='../../RKernel/html/Widget.html#method-Widget-on_msg'><code>RKernel::Widget$on_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="open"><a href='../../RKernel/html/Widget.html#method-Widget-open'><code>RKernel::Widget$open()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send"><a href='../../RKernel/html/Widget.html#method-Widget-send'><code>RKernel::Widget$send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send_state"><a href='../../RKernel/html/Widget.html#method-Widget-send_state'><code>RKernel::Widget$send_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="set_state"><a href='../../RKernel/html/Widget.html#method-Widget-set_state'><code>RKernel::Widget$set_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="add_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-add_class'><code>RKernel::DOMWidget$add_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="has_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-has_class'><code>RKernel::DOMWidget$has_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="remove_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-remove_class'><code>RKernel::DOMWidget$remove_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="SelectionWidget" data-id="initialize"><a href='../../RKernel/html/SelectionWidget.html#method-SelectionWidget-initialize'><code>RKernel::SelectionWidget$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="SelectionWidget" data-id="validate_index"><a href='../../RKernel/html/SelectionWidget.html#method-SelectionWidget-validate_index'><code>RKernel::SelectionWidget$validate_index()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListboxSelect-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ListboxSelect-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListboxSelectClass$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super classes}{
\code{\link[RKernel:HasTraits]{RKernel::HasTraits}} -> \code{\link[RKernel:Widget]{RKernel::Widget}} -> \code{\link[RKernel:DescriptionStyle]{RKernel::DescriptionStyle}} -> \code{ToggleButtonsStyle}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{_model_name}}{Name of the Javascript model in the frontend.}

\item{\code{button_width}}{A unicode string, the width in CSS language}

\item{\code{font_weight}}{A unicode string, the font weight in CSS language}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ToggleButtonsStyle-clone}{\code{ToggleButtonsStyleClass$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="notify"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-notify'><code>RKernel::HasTraits$notify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="observe"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-observe'><code>RKernel::HasTraits$observe()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="validate"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-validate'><code>RKernel::HasTraits$validate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="_send"><a href='../../RKernel/html/Widget.html#method-Widget-_send'><code>RKernel::Widget$_send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="check_version"><a href='../../RKernel/html/Widget.html#method-Widget-check_version'><code>RKernel::Widget$check_version()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="close"><a href='../../RKernel/html/Widget.html#method-Widget-close'><code>RKernel::Widget$close()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="display_data"><a href='../../RKernel/html/Widget.html#method-Widget-display_data'><code>RKernel::Widget$display_data()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="finalize"><a href='../../RKernel/html/Widget.html#method-Widget-finalize'><code>RKernel::Widget$finalize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="get_state"><a href='../../RKernel/html/Widget.html#method-Widget-get_state'><code>RKernel::Widget$get_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_buffers"><a href='../../RKernel/html/Widget.html#method-Widget-handle_buffers'><code>RKernel::Widget$handle_buffers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_msg'><code>RKernel::Widget$handle_comm_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_opened"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_opened'><code>RKernel::Widget$handle_comm_opened()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_custom_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_custom_msg'><code>RKernel::Widget$handle_custom_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-handle_displayed'><code>RKernel::Widget$handle_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_event"><a href='../../RKernel/html/Widget.html#method-Widget-handle_event'><code>RKernel::Widget$handle_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="initialize"><a href='../../RKernel/html/Widget.html#method-Widget-initialize'><code>RKernel::Widget$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-on_displayed'><code>RKernel::Widget$on_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_event"><a href='../../RKernel/html/Widget.html#method-Widget-on_event'><code>RKernel::Widget$on_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_msg"><a href='../../RKernel/html/Widget.html#method-Widget-on_msg'><code>RKernel::Widget$on_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="open"><a href='../../RKernel/html/Widget.html#method-Widget-open'><code>RKernel::Widget$open()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send"><a href='../../RKernel/html/Widget.html#method-Widget-send'><code>RKernel::Widget$send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send_state"><a href='../../RKernel/html/Widget.html#method-Widget-send_state'><code>RKernel::Widget$send_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="set_state"><a href='../../RKernel/html/Widget.html#method-Widget-set_state'><code>RKernel::Widget$set_state()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleButtonsStyle-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleButtonsStyle-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleButtonsStyleClass$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super classes}{
\code{\link[RKernel:HasTraits]{RKernel::HasTraits}} -> \code{\link[RKernel:Widget]{RKernel::Widget}} -> \code{\link[RKernel:DOMWidget]{RKernel::DOMWidget}} -> \code{\link[RKernel:DescriptionWidget]{RKernel::DescriptionWidget}} -> \code{\link[RKernel:SelectionWidget]{RKernel::SelectionWidget}} -> \code{ToggleButtons}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{_model_name}}{Name of the Javascript model in the frontend.}

\item{\code{_view_name}}{Name of the Javascript view in the frontend.}

\item{\code{tooltips}}{A unicode vector with tooltips.}

\item{\code{icons}}{A unicode vector with icon specs.}

\item{\code{style}}{A TobbleButtonStyle widget}

\item{\code{button_style}}{A character string, one of "primary", "success", "info",
"warning", "danger", or the empty string.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ToggleButtons-clone}{\code{ToggleButtonsClass$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="notify"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-notify'><code>RKernel::HasTraits$notify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="observe"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-observe'><code>RKernel::HasTraits$observe()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="validate"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-validate'><code>RKernel::HasTraits$validate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="_send"><a href='../../RKernel/html/Widget.html#method-Widget-_send'><code>RKernel::Widget$_send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="check_version"><a href='../../RKernel/html/Widget.html#method-Widget-check_version'><code>RKernel::Widget$check_version()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="close"><a href='../../RKernel/html/Widget.html#method-Widget-close'><code>RKernel::Widget$close()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="display_data"><a href='../../RKernel/html/Widget.html#method-Widget-display_data'><code>RKernel::Widget$display_data()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="finalize"><a href='../../RKernel/html/Widget.html#method-Widget-finalize'><code>RKernel::Widget$finalize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="get_state"><a href='../../RKernel/html/Widget.html#method-Widget-get_state'><code>RKernel::Widget$get_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_buffers"><a href='../../RKernel/html/Widget.html#method-Widget-handle_buffers'><code>RKernel::Widget$handle_buffers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_msg'><code>RKernel::Widget$handle_comm_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_opened"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_opened'><code>RKernel::Widget$handle_comm_opened()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_custom_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_custom_msg'><code>RKernel::Widget$handle_custom_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-handle_displayed'><code>RKernel::Widget$handle_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_event"><a href='../../RKernel/html/Widget.html#method-Widget-handle_event'><code>RKernel::Widget$handle_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-on_displayed'><code>RKernel::Widget$on_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_event"><a href='../../RKernel/html/Widget.html#method-Widget-on_event'><code>RKernel::Widget$on_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_msg"><a href='../../RKernel/html/Widget.html#method-Widget-on_msg'><code>RKernel::Widget$on_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="open"><a href='../../RKernel/html/Widget.html#method-Widget-open'><code>RKernel::Widget$open()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send"><a href='../../RKernel/html/Widget.html#method-Widget-send'><code>RKernel::Widget$send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send_state"><a href='../../RKernel/html/Widget.html#method-Widget-send_state'><code>RKernel::Widget$send_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="set_state"><a href='../../RKernel/html/Widget.html#method-Widget-set_state'><code>RKernel::Widget$set_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="add_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-add_class'><code>RKernel::DOMWidget$add_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="has_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-has_class'><code>RKernel::DOMWidget$has_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="remove_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-remove_class'><code>RKernel::DOMWidget$remove_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="SelectionWidget" data-id="initialize"><a href='../../RKernel/html/SelectionWidget.html#method-SelectionWidget-initialize'><code>RKernel::SelectionWidget$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="SelectionWidget" data-id="validate_index"><a href='../../RKernel/html/SelectionWidget.html#method-SelectionWidget-validate_index'><code>RKernel::SelectionWidget$validate_index()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleButtons-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleButtons-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleButtonsClass$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super classes}{
\code{\link[RKernel:HasTraits]{RKernel::HasTraits}} -> \code{\link[RKernel:Widget]{RKernel::Widget}} -> \code{\link[RKernel:DOMWidget]{RKernel::DOMWidget}} -> \code{\link[RKernel:DescriptionWidget]{RKernel::DescriptionWidget}} -> \code{\link[RKernel:SelectionWidget]{RKernel::SelectionWidget}} -> \code{SelectionSlider}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{_model_name}}{Name of the Javascript model in the frontend.}

\item{\code{_view_name}}{Name of the Javascript view in the frontend.}

\item{\code{orientation}}{A Unicode string, either "horizontal" or "vertical"}

\item{\code{readout}}{A logical value, whether the value should be showns (read out)}

\item{\code{continuous_update}}{A logical value, whether values should be updated as the slider is moved by the user}

\item{\code{style}}{A SliderStyle widget}

\item{\code{behavior}}{A string that describes the ddragging behavior.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SelectionSlider-clone}{\code{SelectionSliderClass$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="notify"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-notify'><code>RKernel::HasTraits$notify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="observe"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-observe'><code>RKernel::HasTraits$observe()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="validate"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-validate'><code>RKernel::HasTraits$validate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="_send"><a href='../../RKernel/html/Widget.html#method-Widget-_send'><code>RKernel::Widget$_send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="check_version"><a href='../../RKernel/html/Widget.html#method-Widget-check_version'><code>RKernel::Widget$check_version()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="close"><a href='../../RKernel/html/Widget.html#method-Widget-close'><code>RKernel::Widget$close()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="display_data"><a href='../../RKernel/html/Widget.html#method-Widget-display_data'><code>RKernel::Widget$display_data()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="finalize"><a href='../../RKernel/html/Widget.html#method-Widget-finalize'><code>RKernel::Widget$finalize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="get_state"><a href='../../RKernel/html/Widget.html#method-Widget-get_state'><code>RKernel::Widget$get_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_buffers"><a href='../../RKernel/html/Widget.html#method-Widget-handle_buffers'><code>RKernel::Widget$handle_buffers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_msg'><code>RKernel::Widget$handle_comm_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_opened"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_opened'><code>RKernel::Widget$handle_comm_opened()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_custom_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_custom_msg'><code>RKernel::Widget$handle_custom_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-handle_displayed'><code>RKernel::Widget$handle_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_event"><a href='../../RKernel/html/Widget.html#method-Widget-handle_event'><code>RKernel::Widget$handle_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-on_displayed'><code>RKernel::Widget$on_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_event"><a href='../../RKernel/html/Widget.html#method-Widget-on_event'><code>RKernel::Widget$on_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_msg"><a href='../../RKernel/html/Widget.html#method-Widget-on_msg'><code>RKernel::Widget$on_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="open"><a href='../../RKernel/html/Widget.html#method-Widget-open'><code>RKernel::Widget$open()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send"><a href='../../RKernel/html/Widget.html#method-Widget-send'><code>RKernel::Widget$send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send_state"><a href='../../RKernel/html/Widget.html#method-Widget-send_state'><code>RKernel::Widget$send_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="set_state"><a href='../../RKernel/html/Widget.html#method-Widget-set_state'><code>RKernel::Widget$set_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="add_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-add_class'><code>RKernel::DOMWidget$add_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="has_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-has_class'><code>RKernel::DOMWidget$has_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="remove_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-remove_class'><code>RKernel::DOMWidget$remove_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="SelectionWidget" data-id="initialize"><a href='../../RKernel/html/SelectionWidget.html#method-SelectionWidget-initialize'><code>RKernel::SelectionWidget$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="SelectionWidget" data-id="validate_index"><a href='../../RKernel/html/SelectionWidget.html#method-SelectionWidget-validate_index'><code>RKernel::SelectionWidget$validate_index()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SelectionSlider-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SelectionSlider-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SelectionSliderClass$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super classes}{
\code{\link[RKernel:HasTraits]{RKernel::HasTraits}} -> \code{\link[RKernel:Widget]{RKernel::Widget}} -> \code{\link[RKernel:DOMWidget]{RKernel::DOMWidget}} -> \code{\link[RKernel:DescriptionWidget]{RKernel::DescriptionWidget}} -> \code{MultipleSelectionWidget}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{_options_labels}}{A unicode string vector with labels}

\item{\code{index}}{An integer vector of indices of currenlty selected elements.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{value}}{The selected option}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-MultipleSelectionWidget-validate_index}{\code{MultipleSelectionWidgetClass$validate_index()}}
\item \href{#method-MultipleSelectionWidget-new}{\code{MultipleSelectionWidgetClass$new()}}
\item \href{#method-MultipleSelectionWidget-clone}{\code{MultipleSelectionWidgetClass$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="notify"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-notify'><code>RKernel::HasTraits$notify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="observe"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-observe'><code>RKernel::HasTraits$observe()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="validate"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-validate'><code>RKernel::HasTraits$validate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="_send"><a href='../../RKernel/html/Widget.html#method-Widget-_send'><code>RKernel::Widget$_send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="check_version"><a href='../../RKernel/html/Widget.html#method-Widget-check_version'><code>RKernel::Widget$check_version()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="close"><a href='../../RKernel/html/Widget.html#method-Widget-close'><code>RKernel::Widget$close()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="display_data"><a href='../../RKernel/html/Widget.html#method-Widget-display_data'><code>RKernel::Widget$display_data()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="finalize"><a href='../../RKernel/html/Widget.html#method-Widget-finalize'><code>RKernel::Widget$finalize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="get_state"><a href='../../RKernel/html/Widget.html#method-Widget-get_state'><code>RKernel::Widget$get_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_buffers"><a href='../../RKernel/html/Widget.html#method-Widget-handle_buffers'><code>RKernel::Widget$handle_buffers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_msg'><code>RKernel::Widget$handle_comm_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_opened"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_opened'><code>RKernel::Widget$handle_comm_opened()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_custom_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_custom_msg'><code>RKernel::Widget$handle_custom_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-handle_displayed'><code>RKernel::Widget$handle_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_event"><a href='../../RKernel/html/Widget.html#method-Widget-handle_event'><code>RKernel::Widget$handle_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-on_displayed'><code>RKernel::Widget$on_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_event"><a href='../../RKernel/html/Widget.html#method-Widget-on_event'><code>RKernel::Widget$on_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_msg"><a href='../../RKernel/html/Widget.html#method-Widget-on_msg'><code>RKernel::Widget$on_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="open"><a href='../../RKernel/html/Widget.html#method-Widget-open'><code>RKernel::Widget$open()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send"><a href='../../RKernel/html/Widget.html#method-Widget-send'><code>RKernel::Widget$send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send_state"><a href='../../RKernel/html/Widget.html#method-Widget-send_state'><code>RKernel::Widget$send_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="set_state"><a href='../../RKernel/html/Widget.html#method-Widget-set_state'><code>RKernel::Widget$set_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="add_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-add_class'><code>RKernel::DOMWidget$add_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="has_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-has_class'><code>RKernel::DOMWidget$has_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="remove_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-remove_class'><code>RKernel::DOMWidget$remove_class()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MultipleSelectionWidget-validate_index"></a>}}
\if{latex}{\out{\hypertarget{method-MultipleSelectionWidget-validate_index}{}}}
\subsection{Method \code{validate_index()}}{
Validate an index.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MultipleSelectionWidgetClass$validate_index(index)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{index}}{An index, the index to be checked.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MultipleSelectionWidget-new"></a>}}
\if{latex}{\out{\hypertarget{method-MultipleSelectionWidget-new}{}}}
\subsection{Method \code{new()}}{
Initialiser
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MultipleSelectionWidgetClass$new(options, value, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{options}}{A named vector or a vector coerceable into a character vector.}

\item{\code{value}}{Names of selectable options.}

\item{\code{...}}{Any other arguments, ignored.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MultipleSelectionWidget-clone"></a>}}
\if{latex}{\out{\hypertarget{method-MultipleSelectionWidget-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MultipleSelectionWidgetClass$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super classes}{
\code{\link[RKernel:HasTraits]{RKernel::HasTraits}} -> \code{\link[RKernel:Widget]{RKernel::Widget}} -> \code{\link[RKernel:DOMWidget]{RKernel::DOMWidget}} -> \code{\link[RKernel:DescriptionWidget]{RKernel::DescriptionWidget}} -> \code{\link[RKernel:MultipleSelectionWidget]{RKernel::MultipleSelectionWidget}} -> \code{ListboxSelectMultiple}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{_model_name}}{Name of the Javascript model in the frontend.}

\item{\code{_view_name}}{Name of the Javascript view in the frontend.}

\item{\code{rows}}{An integer, the number of rows.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ListboxSelectMultiple-clone}{\code{ListboxSelectMultipleClass$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="notify"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-notify'><code>RKernel::HasTraits$notify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="observe"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-observe'><code>RKernel::HasTraits$observe()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="validate"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-validate'><code>RKernel::HasTraits$validate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="_send"><a href='../../RKernel/html/Widget.html#method-Widget-_send'><code>RKernel::Widget$_send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="check_version"><a href='../../RKernel/html/Widget.html#method-Widget-check_version'><code>RKernel::Widget$check_version()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="close"><a href='../../RKernel/html/Widget.html#method-Widget-close'><code>RKernel::Widget$close()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="display_data"><a href='../../RKernel/html/Widget.html#method-Widget-display_data'><code>RKernel::Widget$display_data()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="finalize"><a href='../../RKernel/html/Widget.html#method-Widget-finalize'><code>RKernel::Widget$finalize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="get_state"><a href='../../RKernel/html/Widget.html#method-Widget-get_state'><code>RKernel::Widget$get_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_buffers"><a href='../../RKernel/html/Widget.html#method-Widget-handle_buffers'><code>RKernel::Widget$handle_buffers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_msg'><code>RKernel::Widget$handle_comm_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_opened"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_opened'><code>RKernel::Widget$handle_comm_opened()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_custom_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_custom_msg'><code>RKernel::Widget$handle_custom_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-handle_displayed'><code>RKernel::Widget$handle_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_event"><a href='../../RKernel/html/Widget.html#method-Widget-handle_event'><code>RKernel::Widget$handle_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-on_displayed'><code>RKernel::Widget$on_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_event"><a href='../../RKernel/html/Widget.html#method-Widget-on_event'><code>RKernel::Widget$on_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_msg"><a href='../../RKernel/html/Widget.html#method-Widget-on_msg'><code>RKernel::Widget$on_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="open"><a href='../../RKernel/html/Widget.html#method-Widget-open'><code>RKernel::Widget$open()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send"><a href='../../RKernel/html/Widget.html#method-Widget-send'><code>RKernel::Widget$send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send_state"><a href='../../RKernel/html/Widget.html#method-Widget-send_state'><code>RKernel::Widget$send_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="set_state"><a href='../../RKernel/html/Widget.html#method-Widget-set_state'><code>RKernel::Widget$set_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="add_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-add_class'><code>RKernel::DOMWidget$add_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="has_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-has_class'><code>RKernel::DOMWidget$has_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="remove_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-remove_class'><code>RKernel::DOMWidget$remove_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="MultipleSelectionWidget" data-id="initialize"><a href='../../RKernel/html/MultipleSelectionWidget.html#method-MultipleSelectionWidget-initialize'><code>RKernel::MultipleSelectionWidget$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="MultipleSelectionWidget" data-id="validate_index"><a href='../../RKernel/html/MultipleSelectionWidget.html#method-MultipleSelectionWidget-validate_index'><code>RKernel::MultipleSelectionWidget$validate_index()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListboxSelectMultiple-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ListboxSelectMultiple-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListboxSelectMultipleClass$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super classes}{
\code{\link[RKernel:HasTraits]{RKernel::HasTraits}} -> \code{\link[RKernel:Widget]{RKernel::Widget}} -> \code{\link[RKernel:DOMWidget]{RKernel::DOMWidget}} -> \code{\link[RKernel:DescriptionWidget]{RKernel::DescriptionWidget}} -> \code{\link[RKernel:MultipleSelectionWidget]{RKernel::MultipleSelectionWidget}} -> \code{SelectionRangeSlider}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{_model_name}}{Name of the Javascript model in the frontend.}

\item{\code{_view_name}}{Name of the Javascript view in the frontend.}

\item{\code{orientation}}{A Unicode string, either "horizontal" or "vertical"}

\item{\code{readout}}{A logical value, whether the value should be showns (read out)}

\item{\code{continuous_update}}{A logical value, whether values should be updated as the slider is moved by the user}

\item{\code{style}}{A SliderStyle widget}

\item{\code{behavior}}{A string that describes the ddragging behavior.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SelectionRangeSlider-validate_index}{\code{SelectionRangeSliderClass$validate_index()}}
\item \href{#method-SelectionRangeSlider-new}{\code{SelectionRangeSliderClass$new()}}
\item \href{#method-SelectionRangeSlider-clone}{\code{SelectionRangeSliderClass$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="notify"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-notify'><code>RKernel::HasTraits$notify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="observe"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-observe'><code>RKernel::HasTraits$observe()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="HasTraits" data-id="validate"><a href='../../RKernel/html/HasTraits.html#method-HasTraits-validate'><code>RKernel::HasTraits$validate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="_send"><a href='../../RKernel/html/Widget.html#method-Widget-_send'><code>RKernel::Widget$_send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="check_version"><a href='../../RKernel/html/Widget.html#method-Widget-check_version'><code>RKernel::Widget$check_version()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="close"><a href='../../RKernel/html/Widget.html#method-Widget-close'><code>RKernel::Widget$close()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="display_data"><a href='../../RKernel/html/Widget.html#method-Widget-display_data'><code>RKernel::Widget$display_data()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="finalize"><a href='../../RKernel/html/Widget.html#method-Widget-finalize'><code>RKernel::Widget$finalize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="get_state"><a href='../../RKernel/html/Widget.html#method-Widget-get_state'><code>RKernel::Widget$get_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_buffers"><a href='../../RKernel/html/Widget.html#method-Widget-handle_buffers'><code>RKernel::Widget$handle_buffers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_msg'><code>RKernel::Widget$handle_comm_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_comm_opened"><a href='../../RKernel/html/Widget.html#method-Widget-handle_comm_opened'><code>RKernel::Widget$handle_comm_opened()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_custom_msg"><a href='../../RKernel/html/Widget.html#method-Widget-handle_custom_msg'><code>RKernel::Widget$handle_custom_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-handle_displayed'><code>RKernel::Widget$handle_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="handle_event"><a href='../../RKernel/html/Widget.html#method-Widget-handle_event'><code>RKernel::Widget$handle_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_displayed"><a href='../../RKernel/html/Widget.html#method-Widget-on_displayed'><code>RKernel::Widget$on_displayed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_event"><a href='../../RKernel/html/Widget.html#method-Widget-on_event'><code>RKernel::Widget$on_event()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="on_msg"><a href='../../RKernel/html/Widget.html#method-Widget-on_msg'><code>RKernel::Widget$on_msg()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="open"><a href='../../RKernel/html/Widget.html#method-Widget-open'><code>RKernel::Widget$open()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send"><a href='../../RKernel/html/Widget.html#method-Widget-send'><code>RKernel::Widget$send()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="send_state"><a href='../../RKernel/html/Widget.html#method-Widget-send_state'><code>RKernel::Widget$send_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="Widget" data-id="set_state"><a href='../../RKernel/html/Widget.html#method-Widget-set_state'><code>RKernel::Widget$set_state()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="add_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-add_class'><code>RKernel::DOMWidget$add_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="has_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-has_class'><code>RKernel::DOMWidget$has_class()</code></a></span></li>
<li><span class="pkg-link" data-pkg="RKernel" data-topic="DOMWidget" data-id="remove_class"><a href='../../RKernel/html/DOMWidget.html#method-DOMWidget-remove_class'><code>RKernel::DOMWidget$remove_class()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SelectionRangeSlider-validate_index"></a>}}
\if{latex}{\out{\hypertarget{method-SelectionRangeSlider-validate_index}{}}}
\subsection{Method \code{validate_index()}}{
Validate an index.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SelectionRangeSliderClass$validate_index(index)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{index}}{An index, the index to be checked.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SelectionRangeSlider-new"></a>}}
\if{latex}{\out{\hypertarget{method-SelectionRangeSlider-new}{}}}
\subsection{Method \code{new()}}{
Initialiser
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SelectionRangeSliderClass$new(options, value, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{options}}{A named vector or a vector coerceable into a character vector.}

\item{\code{value}}{Names of selectable options.}

\item{\code{...}}{Any other arguments, ignored.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SelectionRangeSlider-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SelectionRangeSlider-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SelectionRangeSliderClass$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
